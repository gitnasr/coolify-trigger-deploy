name: Coolify Deploy
description: Reusable action for validating and triggering Coolify deployments with NTFY notifications
author: gitnasr
color: red
icon: anchor

inputs:
  docker_image:
    description: The Docker image tag to display
    required: true
  coolify_url:
    description: Coolify instance base URL
    required: true
  coolify_resource_id:
    description: Coolify resource ID
    required: true
  coolify_api_token:
    description: Coolify API token
    required: true
  ntfy_topic:
    description: NTFY topic to send notifications to
    required: false
  ntfy_token:
    description: NTFY authorization token (if topic is protected)
    required: false

runs:
  using: "composite"
  steps:
    - name: Validate Coolify inputs
      shell: bash
      run: |
        echo "Validating that COOLIFY_URL doesn't end in '/'"
        echo "${{ inputs.coolify_url }}" | grep -P '[^/]$'
        echo "Validating required Coolify inputs are set"
        if [ -z "${{ inputs.coolify_url }}" ] || [ -z "${{ inputs.coolify_resource_id }}" ] || [ -z "${{ inputs.coolify_api_token }}" ]; then
          echo "❌ Error: Missing required Coolify inputs"
          exit 1
        fi

    - name: Update source commit SHA in Coolify
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ inputs.coolify_url }}/api/v1/applications/${{ inputs.coolify_resource_id }}
        method: PATCH
        bearerToken: ${{ inputs.coolify_api_token }}
        data: >-
          {
            "git_commit_sha": "${{ github.sha }}"
          }

    - name: Trigger Coolify deployment via webhook
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ inputs.coolify_url }}/api/v1/deploy?uuid=${{ inputs.coolify_resource_id }}&force=false
        method: GET
        bearerToken: ${{ inputs.coolify_api_token }}

    - name: Deployment success notification
      if: success()
      shell: bash
      run: |
        echo "✅ Deployment succeeded for ${{ inputs.docker_image }}"
        if [ -n "${{ inputs.ntfy_topic }}" ]; then
          curl -X POST \
            -H "Title: ✅ Coolify Deploy Success" \
            -H "Priority: 3" \
            -H "Tags: rocket" \
            -H "Authorization: Bearer ${{ inputs.ntfy_token }}" \
            -d "Deployment succeeded for ${{ inputs.docker_image }} (commit: ${{ github.sha }})" \
            https://ntfy.sh/${{ inputs.ntfy_topic }}
        fi

    - name: Deployment failure notification
      if: failure()
      shell: bash
      run: |
        echo "❌ Deployment failed for ${{ inputs.docker_image }}"
        if [ -n "${{ inputs.ntfy_topic }}" ]; then
          curl -X POST \
            -H "Title: ❌ Coolify Deploy Failed" \
            -H "Priority: 5" \
            -H "Tags: warning" \
            -H "Authorization: Bearer ${{ inputs.ntfy_token }}" \
            -d "Deployment failed for ${{ inputs.docker_image }} (commit: ${{ github.sha }})" \
            https://ntfy.sh/${{ inputs.ntfy_topic }}
        fi
